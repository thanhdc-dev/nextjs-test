import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import config from "@/libs/config";
import { openGraph, twitter } from "@/components/SEO/shared-metadata";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
	metadataBase: new URL(config.appBaseUrl),
	alternates: {
		canonical: '/',
	},
	title: {
		default: 'Create Next App',
		template: '%s | Thanhdc',
	},
	description: 'Generated by create next app',
	applicationName: 'Thanhdc',
	keywords: ['Thanhdc website', 'Thanhdc'],
	authors: [{ name: 'Thanhdc', url: config.appBaseUrl }],
	creator: 'Thanhdc',
	publisher: 'Thanhdc',
	formatDetection: {
		email: true,
		address: true,
		telephone: true,
	},
	openGraph: {
		...openGraph,
	},
	twitter: {
		...twitter,
	},
	robots:
		config.appEnv !== 'production'
			? {
					index: true,
					follow: true,
			  }
			: {},
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
